@page "/"
@inject IJSRuntime JsRuntime

<VisualProgramEditor Program="program" />

<button class="execute-button" @onclick="Execute">Execute</button>

@code {
    static string testEntryId = "testentry";

    static VisualProgram program = new VisualProgram {
        EntryDefinitions = new Dictionary<string, EntryDefinition> {
            { testEntryId, new EntryDefinition {
                Name = "Test Entry",
                Parameters = new VisualProgrammer.Core.Utils.IndexedDictionary<string, Type> {
                    { "someDouble", typeof(double) }
                }
            } }
        },

        variableDefinitions = new Dictionary<string, (Type type, object @default)> {
            { "doubleVar", (typeof(double), 0d) }
        },

        Nodes = new Dictionary<Guid, VisualNode> {
            { Guid.NewGuid(), new VisualEntry(testEntryId) {
                ParameterMap = new Dictionary<string, string> { { "someDouble", "doubleVar" } }, // Map the "someInt" parameter onto the "intVar" variable
                Position = new System.Drawing.Point(100, 10) }
            },
        }
    };

    void Execute() {
        var programFactory = program.Compile<IDemoProgram>();
        var inst = programFactory.CreateProgram();
        inst.TestEntry(10d);
        Console.WriteLine($"Double var = {inst.DoubleVar}");
        Console.WriteLine($"Double var other = {inst.GetVariable("doubleVar")}");
    }

    public interface IDemoProgram : VisualProgrammer.Core.Compilation.ICompiledInstanceBase
    {
        void TestEntry(double d);
        double DoubleVar { get; set; }
    }
}